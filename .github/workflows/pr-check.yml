name: Pull Request Check

on:
  pull_request:
    branches: [master, dev]

jobs:
  pr-check:
    name: PR Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run tests
        run: npm run test

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Build project
        run: npm run build

      - name: Comment PR with results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            let coverage = 'N/A';

            try {
              if (fs.existsSync('./coverage/lcov.info')) {
                const lcov = fs.readFileSync('./coverage/lcov.info', 'utf8');
                const lines = lcov.split('\n');
                const summary = lines.find(line => line.startsWith('SF:'));
                if (summary) {
                  coverage = 'Coverage report generated';
                }
              }
            } catch (error) {
              console.log('No coverage report found');
            }

            const comment = `## 🔍 PR Check Results

            ✅ **Linting**: ${process.env.LINT_EXIT_CODE === '0' ? 'Passed' : 'Failed'}
            ✅ **Formatting**: ${process.env.FORMAT_EXIT_CODE === '0' ? 'Passed' : 'Failed'}
            ✅ **Tests**: ${process.env.TEST_EXIT_CODE === '0' ? 'Passed' : 'Failed'}
            ✅ **Build**: ${process.env.BUILD_EXIT_CODE === '0' ? 'Passed' : 'Failed'}
            📊 **Coverage**: ${coverage}

            ---
            *This comment was automatically generated by GitHub Actions*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
